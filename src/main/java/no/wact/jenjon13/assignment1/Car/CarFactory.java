package no.wact.jenjon13.assignment1.car;

import java.util.ArrayList;
import java.util.List;

/**
 * Factory for LeaseCar instances.
 */
public class CarFactory {
    private static final String LICENSEPLATE_PREFIX = "RF";
    private static final int LICENSEPLATE_LENGTH = 5;
    private static final int LICENSEPLATE_INIT_NUM = 1;
    private static int carCount = LICENSEPLATE_INIT_NUM - 1;

    /**
     * Producer method for this factory.
     * Creates a LeaseCar instance with a license plate generated by the generateLicensePlate() method.
     *
     * @return Returns a single created LeaseCar instance.
     */
    public static LeaseCar newCar() {
        carCount++;
        return new LeaseCar(generateLicensePlate());
    }

    /**
     * Generates a String containing [LICENSPLATE_LENGTH] characters.
     * The characters are duplicates of the String value of carCount.
     *
     * @return The generated licence plate as a String.
     */
    private static String generateLicensePlate() {
        final StringBuilder license = new StringBuilder(LICENSEPLATE_LENGTH);
        license.append(LICENSEPLATE_PREFIX);
        for (int j = 0; j < LICENSEPLATE_LENGTH; j++) {
            license.append(String.valueOf(carCount));
        }

        return license.toString();
    }

    /**
     * Convenience method to call newCar() times equal to the value of the passed parameter.
     *
     * @param amount Number of LeaseCar instances to create in the returned List
     * @return Returns a List<LeaseCar> containing the instantiated LeaseCars.
     * @see no.wact.jenjon13.assignment1.car.CarFactory#newCar
     */
    public static List<LeaseCar> newCars(int amount) {
        final List<LeaseCar> resultCars = new ArrayList<LeaseCar>(amount);
        for (int i = 0; i < amount; i++) {
            resultCars.add(newCar());
        }

        return resultCars;
    }
}